//ðŸ§©Don't Edit this file.âœ¨Generated in Sat Feb 03 2024 15:08:38 GMT+0700 (Indochina Time)âœ¨
model AccountEvent {
  id        Int   @id @default(autoincrement())
  eventID   Int
  // event    Event    @relation(fields: [eventID], references: [id])
  extraData Json  @default("{}") // Array of object in Json string.
  status    Int   @default(0)
  roleID    Int
  role      Role  @relation(fields: [roleID], references: [id])
  User      User? @relation(fields: [userId], references: [id])
  userId    Int?
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("CONNECTION_STRING")
}

model Payment {
  id            Int       @id @default(autoincrement())
  buyer         User      @relation(fields: [buyerID], references: [id])
  buyerID       Int
  gateway       String
  paymentID     String?
  amount        Int
  description   String
  accountNumber String?
  reference     String?
  paidAt        DateTime?
  createdAt     DateTime  @default(now())
  paymentStatus Int       @default(0) // 0 = Unpaid/Cancelled, 1 = Paid, 2 = Waiting for Confirmation, 3 = Cancelled
}

model Role {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  // actions      RoleActivity[]
  users        User[]
  AccountEvent AccountEvent[]
}

model User {
  id            Int            @id @default(autoincrement())
  username      String         @unique
  email         String         @unique
  password      String
  fullName      String
  studentID     String
  school        String
  createdAt     DateTime       @default(now())
  createdBy     String         @default("system")
  role          Role           @relation(fields: [roleID], references: [id])
  roleID        Int            @default(2) // role of user
  accountEvents AccountEvent[] // list of events that user has joined
  Payment       Payment[]
}
